{"ast":null,"code":"let prodData=null;const getProdData=url=>{if(prodData===null){return fetch(url,{method:'GET',headers:{'Content-Type':'application/json'}}).then(r=>r.json().then(data=>({status:r.status,body:data}))).then(obj=>{return obj.body;}).catch(err=>{return err;});}else{return Promise.resolve(getProdData);}};export{getProdData};","map":{"version":3,"names":["prodData","getProdData","url","fetch","method","headers","then","r","json","data","status","body","obj","catch","err","Promise","resolve"],"sources":["/Users/apple/anupamv/Anupam/ReactProject/sevkin/src/Service/ProdService.js"],"sourcesContent":["let prodData = null\n\nconst getProdData = (url) => {\n    if (prodData === null) {\n        return fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }).then(r => r.json()\n            .then(data => ({\n                status: r.status, body: data\n            })\n            ))\n            .then(obj => {\n                return obj.body\n            })\n            .catch(err => {\n                return err\n            });\n    }\n    else {\n        return Promise.resolve(getProdData)\n    }\n}\n\nexport {\n    getProdData\n};"],"mappings":"AAAA,GAAI,CAAAA,QAAQ,CAAG,IAAI,CAEnB,KAAM,CAAAC,WAAW,CAAIC,GAAG,EAAK,CACzB,GAAIF,QAAQ,GAAK,IAAI,CAAE,CACnB,MAAO,CAAAG,KAAK,CAACD,GAAG,CAAE,CACdE,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CAACC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAChBF,IAAI,CAACG,IAAI,GAAK,CACXC,MAAM,CAAEH,CAAC,CAACG,MAAM,CAAEC,IAAI,CAAEF,IAC5B,CAAC,CACD,CAAC,CAAC,CACDH,IAAI,CAACM,GAAG,EAAI,CACT,MAAO,CAAAA,GAAG,CAACD,IAAI,CACnB,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,EAAI,CACV,MAAO,CAAAA,GAAG,CACd,CAAC,CAAC,CACV,CAAC,IACI,CACD,MAAO,CAAAC,OAAO,CAACC,OAAO,CAACf,WAAW,CAAC,CACvC,CACJ,CAAC,CAED,OACIA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}