{"ast":null,"code":"var _jsxFileName = \"/Users/apple/anupamv/Anupam/ReactProject/sevkin/src/ThemedComponent.js\",\n  _s = $RefreshSig$();\n// src/ThemedComponent.js\nimport React from 'react';\nimport { useTheme } from './ThemeContext'; // Import useTheme if needed for conditional logic, but not for direct CSS variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemedComponent = () => {\n  _s();\n  const {\n    theme\n  } = useTheme(); // To show current theme in text\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to Themed Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This component's styles will automatically adjust based on the current theme.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Theme: **\", theme.toUpperCase(), \"**\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Themed Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemedComponent, \"JkSxfi8+JQlqgIgDOc3wQN+nVIw=\", false, function () {\n  return [useTheme];\n});\n_c = ThemedComponent;\nexport default ThemedComponent;\nvar _c;\n$RefreshReg$(_c, \"ThemedComponent\");","map":{"version":3,"names":["React","useTheme","jsxDEV","_jsxDEV","ThemedComponent","_s","theme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/apple/anupamv/Anupam/ReactProject/sevkin/src/ThemedComponent.js"],"sourcesContent":["// src/ThemedComponent.js\nimport React from 'react';\nimport { useTheme } from './ThemeContext'; // Import useTheme if needed for conditional logic, but not for direct CSS variables\n\nconst ThemedComponent = () => {\n  const { theme } = useTheme(); // To show current theme in text\n\n  return (\n    <div className=\"card\">\n      <h2>Welcome to Themed Content</h2>\n      <p>This component's styles will automatically adjust based on the current theme.</p>\n      <p>Current Theme: **{theme.toUpperCase()}**</p>\n      <button>Themed Button</button>\n    </div>\n  );\n};\n\nexport default ThemedComponent;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE9B,oBACEE,OAAA;IAAKI,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBL,OAAA;MAAAK,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCT,OAAA;MAAAK,QAAA,EAAG;IAA6E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpFT,OAAA;MAAAK,QAAA,GAAG,mBAAiB,EAACF,KAAK,CAACO,WAAW,CAAC,CAAC,EAAC,IAAE;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC/CT,OAAA;MAAAK,QAAA,EAAQ;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAACP,EAAA,CAXID,eAAe;EAAA,QACDH,QAAQ;AAAA;AAAAa,EAAA,GADtBV,eAAe;AAarB,eAAeA,eAAe;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}