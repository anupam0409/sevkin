{"ast":null,"code":"let loginData = null;\nconst doLoginData = (url, param) => {\n  if (loginData === null) {\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(param)\n    }).then(r => r.json().then(data => ({\n      status: r.status,\n      body: data\n    }))).then(obj => {\n      return obj.body;\n    }).catch(err => {\n      return err;\n    });\n  } else {\n    return Promise.resolve(loginData);\n  }\n};\nexport { doLoginData };","map":{"version":3,"names":["loginData","doLoginData","url","param","fetch","method","headers","body","JSON","stringify","then","r","json","data","status","obj","catch","err","Promise","resolve"],"sources":["/Users/apple/anupamv/Anupam/ReactProject/sevkin/src/Service/UserService.js"],"sourcesContent":["let loginData = null\n\nconst doLoginData = (url, param) => {\n    if (loginData === null) {\n        return fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(param)\n        }).then(r => r.json()\n            .then(data => ({\n                status: r.status, body: data\n            })\n            ))\n            .then(obj => {\n                return obj.body\n            })\n            .catch(err => {\n                return err\n            });\n    }\n    else {\n        return Promise.resolve(loginData)\n    }\n}\n\nexport {\n    doLoginData\n};"],"mappings":"AAAA,IAAIA,SAAS,GAAG,IAAI;AAEpB,MAAMC,WAAW,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;EAChC,IAAIH,SAAS,KAAK,IAAI,EAAE;IACpB,OAAOI,KAAK,CAACF,GAAG,EAAE;MACdG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK;IAC9B,CAAC,CAAC,CAACO,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAChBF,IAAI,CAACG,IAAI,KAAK;MACXC,MAAM,EAAEH,CAAC,CAACG,MAAM;MAAEP,IAAI,EAAEM;IAC5B,CAAC,CACD,CAAC,CAAC,CACDH,IAAI,CAACK,GAAG,IAAI;MACT,OAAOA,GAAG,CAACR,IAAI;IACnB,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,IAAI;MACV,OAAOA,GAAG;IACd,CAAC,CAAC;EACV,CAAC,MACI;IACD,OAAOC,OAAO,CAACC,OAAO,CAACnB,SAAS,CAAC;EACrC;AACJ,CAAC;AAED,SACIC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}