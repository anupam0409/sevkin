{"ast":null,"code":"let loginData=null;const doLoginData=(url,param)=>{if(loginData===null){return fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(param)}).then(r=>r.json().then(data=>({status:r.status,body:data}))).then(obj=>{return obj.body;}).catch(err=>{return err;});}else{return Promise.resolve(loginData);}};export{doLoginData};","map":{"version":3,"names":["loginData","doLoginData","url","param","fetch","method","headers","body","JSON","stringify","then","r","json","data","status","obj","catch","err","Promise","resolve"],"sources":["/Users/apple/anupamv/Anupam/ReactProject/sevkin/src/Service/UserService.js"],"sourcesContent":["let loginData = null\n\nconst doLoginData = (url, param) => {\n    if (loginData === null) {\n        return fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(param)\n        }).then(r => r.json()\n            .then(data => ({\n                status: r.status, body: data\n            })\n            ))\n            .then(obj => {\n                return obj.body\n            })\n            .catch(err => {\n                return err\n            });\n    }\n    else {\n        return Promise.resolve(loginData)\n    }\n}\n\nexport {\n    doLoginData\n};"],"mappings":"AAAA,GAAI,CAAAA,SAAS,CAAG,IAAI,CAEpB,KAAM,CAAAC,WAAW,CAAGA,CAACC,GAAG,CAAEC,KAAK,GAAK,CAChC,GAAIH,SAAS,GAAK,IAAI,CAAE,CACpB,MAAO,CAAAI,KAAK,CAACF,GAAG,CAAE,CACdG,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACN,KAAK,CAC9B,CAAC,CAAC,CAACO,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAChBF,IAAI,CAACG,IAAI,GAAK,CACXC,MAAM,CAAEH,CAAC,CAACG,MAAM,CAAEP,IAAI,CAAEM,IAC5B,CAAC,CACD,CAAC,CAAC,CACDH,IAAI,CAACK,GAAG,EAAI,CACT,MAAO,CAAAA,GAAG,CAACR,IAAI,CACnB,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,EAAI,CACV,MAAO,CAAAA,GAAG,CACd,CAAC,CAAC,CACV,CAAC,IACI,CACD,MAAO,CAAAC,OAAO,CAACC,OAAO,CAACnB,SAAS,CAAC,CACrC,CACJ,CAAC,CAED,OACIC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}