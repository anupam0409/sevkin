{"ast":null,"code":"import{useState,useEffect}from'react';import Toast from'react-bootstrap/Toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const validateUsernamePassword=(username,password)=>{const errors=[];if(!username||typeof username!=='string'||username.trim()===''){errors.push(\"Username is required.\");}else{const trimmedUsername=username.trim();if(trimmedUsername.length<3){errors.push(\"Username must be at least 3 characters long.\");}/*if (trimmedUsername.length > 20) {\n            errors.push(\"Username cannot exceed 20 characters.\");\n        }\n        // Example: Only allow alphanumeric, underscore, and hyphen characters\n        if (!/^[a-zA-Z0-9_-]+$/.test(trimmedUsername)) {\n            errors.push(\"Username can only contain letters, numbers, underscores, and hyphens.\");\n        }*/// Add more specific username rules as needed, e.g., no leading/trailing spaces\n}// --- Password Validation Rules ---\nif(!password||typeof password!=='string'||password.trim()===''){errors.push(\"Password is required.\");}else{const trimmedPassword=password.trim();if(trimmedPassword.length<5){errors.push(\"Password must be at least 5 characters long.\");}/*if (trimmedPassword.length > 50) {\n            errors.push(\"Password cannot exceed 50 characters.\");\n        }\n        if (!/[A-Z]/.test(trimmedPassword)) {\n            errors.push(\"Password must contain at least one uppercase letter.\");\n        }\n        if (!/[a-z]/.test(trimmedPassword)) {\n            errors.push(\"Password must contain at least one lowercase letter.\");\n        }\n        if (!/[0-9]/.test(trimmedPassword)) {\n            errors.push(\"Password must contain at least one number.\");\n        }\n        // Example: Requires at least one special character (non-alphanumeric, non-space)\n        if (!/[^a-zA-Z0-9\\s]/.test(trimmedPassword)) {\n            errors.push(\"Password must contain at least one special character.\");\n        }*/}// Determine overall validity\nconst isValid=errors.length===0;return{isValid,errors};};export const justAnAlert=()=>{alert('hello');};export const ShowSuccessCall=_ref=>{let{message}=_ref;// State to control the visibility of the toast\nconst[showSuccess,setShowSuccess]=useState(true);// Start as true to immediately show the toast\nuseEffect(()=>{if(showSuccess){setTimeout(function(){setShowSuccess(false);window.location.reload();},2000);}},[showSuccess]);// Empty dependency array ensures this effect runs only once on mount\n// Render the Toast component\nreturn/*#__PURE__*/_jsx(Toast,{show:showSuccess,onClose:()=>setShowSuccess(false)// Optional: allow user to close manually\n,style:{position:'fixed',// Position the toast\ntop:'20px',right:'20px',zIndex:9999,// Ensure it's above other content\nbackgroundImage:'linear-gradient(#4BB543,#87cc80)',// Success gradient\ncolor:'white',fontSize:'15px',borderLeft:'4px solid green'},children:/*#__PURE__*/_jsxs(Toast.Body,{children:[/*#__PURE__*/_jsx(\"img\",{style:{padding:'8px',marginRight:'10px'}// Added right margin for spacing\n,src:\"/sevkin/assets/img/icon/success.png\",alt:\"sevkin\",height:50,width:50}),/*#__PURE__*/_jsx(\"b\",{children:message})]})});};export const ShowErrorCall=_ref2=>{let{message}=_ref2;// Renamed for clarity and to indicate it's a component\nconst[showError,setShowError]=useState(true);// Start as true to immediately show the toast\nuseEffect(()=>{if(showError){setTimeout(function(){setShowError(false);},2000);}},[showError]);// Empty dependency array ensures this effect runs only once on mount\n// Render the Toast component\nreturn/*#__PURE__*/_jsx(Toast,{show:showError,onClose:()=>setShowError(false)// Optional: allow user to close manually\n,style:{position:'fixed',// Position the toast\ntop:'20px',right:'20px',zIndex:9999,// Ensure it's above other content\nbackgroundImage:'linear-gradient(#DC3545,#ee7b7b)',color:'white',fontSize:'15px',borderLeft:'4px solid red'},children:/*#__PURE__*/_jsxs(Toast.Body,{children:[/*#__PURE__*/_jsx(\"img\",{src:\"/sevkin/assets/img/icon/error.png\",alt:\"sevkin\",height:50,width:50,style:{marginRight:'10px'}// Add some spacing\n}),/*#__PURE__*/_jsx(\"b\",{children:message})]})});};","map":{"version":3,"names":["useState","useEffect","Toast","jsx","_jsx","jsxs","_jsxs","validateUsernamePassword","username","password","errors","trim","push","trimmedUsername","length","trimmedPassword","isValid","justAnAlert","alert","ShowSuccessCall","_ref","message","showSuccess","setShowSuccess","setTimeout","window","location","reload","show","onClose","style","position","top","right","zIndex","backgroundImage","color","fontSize","borderLeft","children","Body","padding","marginRight","src","alt","height","width","ShowErrorCall","_ref2","showError","setShowError"],"sources":["/Users/apple/anupamv/Anupam/ReactProject/sevkin/src/Service/Util.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Toast from 'react-bootstrap/Toast';\n\nexport const validateUsernamePassword = (username, password) => {\n    const errors = [];\n\n    if (!username || typeof username !== 'string' || username.trim() === '') {\n        errors.push(\"Username is required.\");\n    } else {\n        const trimmedUsername = username.trim();\n        if (trimmedUsername.length < 3) {\n            errors.push(\"Username must be at least 3 characters long.\");\n        }\n        /*if (trimmedUsername.length > 20) {\n            errors.push(\"Username cannot exceed 20 characters.\");\n        }\n        // Example: Only allow alphanumeric, underscore, and hyphen characters\n        if (!/^[a-zA-Z0-9_-]+$/.test(trimmedUsername)) {\n            errors.push(\"Username can only contain letters, numbers, underscores, and hyphens.\");\n        }*/\n        // Add more specific username rules as needed, e.g., no leading/trailing spaces\n    }\n\n    // --- Password Validation Rules ---\n    if (!password || typeof password !== 'string' || password.trim() === '') {\n        errors.push(\"Password is required.\");\n    } else {\n        const trimmedPassword = password.trim();\n        if (trimmedPassword.length < 5) {\n            errors.push(\"Password must be at least 5 characters long.\");\n        }\n        /*if (trimmedPassword.length > 50) {\n            errors.push(\"Password cannot exceed 50 characters.\");\n        }\n        if (!/[A-Z]/.test(trimmedPassword)) {\n            errors.push(\"Password must contain at least one uppercase letter.\");\n        }\n        if (!/[a-z]/.test(trimmedPassword)) {\n            errors.push(\"Password must contain at least one lowercase letter.\");\n        }\n        if (!/[0-9]/.test(trimmedPassword)) {\n            errors.push(\"Password must contain at least one number.\");\n        }\n        // Example: Requires at least one special character (non-alphanumeric, non-space)\n        if (!/[^a-zA-Z0-9\\s]/.test(trimmedPassword)) {\n            errors.push(\"Password must contain at least one special character.\");\n        }*/\n    }\n\n    // Determine overall validity\n    const isValid = errors.length === 0;\n\n    return { isValid, errors };\n};\n\nexport const justAnAlert = () => {\n    alert('hello');\n};\n\nexport const ShowSuccessCall = ({ message }) => {\n    // State to control the visibility of the toast\n    const [showSuccess, setShowSuccess] = useState(true); // Start as true to immediately show the toast\n\n    useEffect(() => {\n        if (showSuccess) {\n            setTimeout(function () {\n                setShowSuccess(false)\n                window.location.reload();\n            }, 2000);\n        }\n    }, [showSuccess]); // Empty dependency array ensures this effect runs only once on mount\n\n    // Render the Toast component\n    return (\n        <Toast\n            show={showSuccess}\n            onClose={() => setShowSuccess(false)} // Optional: allow user to close manually\n            style={{\n                position: 'fixed', // Position the toast\n                top: '20px',\n                right: '20px',\n                zIndex: 9999, // Ensure it's above other content\n                backgroundImage: 'linear-gradient(#4BB543,#87cc80)', // Success gradient\n                color: 'white',\n                fontSize: '15px',\n                borderLeft: '4px solid green'\n            }}\n        >\n            <Toast.Body>\n                <img\n                    style={{ padding: '8px', marginRight: '10px' }} // Added right margin for spacing\n                    src=\"/sevkin/assets/img/icon/success.png\"\n                    alt=\"sevkin\"\n                    height={50}\n                    width={50}\n                />\n                <b>{message}</b>\n            </Toast.Body>\n        </Toast>\n    );\n};\n\nexport const ShowErrorCall = ({ message }) => { // Renamed for clarity and to indicate it's a component\n    const [showError, setShowError] = useState(true); // Start as true to immediately show the toast\n\n    useEffect(() => {\n        if (showError) {\n            setTimeout(function () {\n                setShowError(false)\n            }, 2000);\n        }\n    }, [showError]); // Empty dependency array ensures this effect runs only once on mount\n\n    // Render the Toast component\n    return (\n        <Toast\n            show={showError}\n            onClose={() => setShowError(false)} // Optional: allow user to close manually\n            style={{\n                position: 'fixed', // Position the toast\n                top: '20px',\n                right: '20px',\n                zIndex: 9999, // Ensure it's above other content\n                backgroundImage: 'linear-gradient(#DC3545,#ee7b7b)',\n                color: 'white',\n                fontSize: '15px',\n                borderLeft: '4px solid red'\n            }}\n        >\n            <Toast.Body>\n                <img\n                    src=\"/sevkin/assets/img/icon/error.png\"\n                    alt=\"sevkin\"\n                    height={50}\n                    width={50}\n                    style={{ marginRight: '10px' }} // Add some spacing\n                />\n                <b>{message}</b>\n            </Toast.Body>\n        </Toast>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}